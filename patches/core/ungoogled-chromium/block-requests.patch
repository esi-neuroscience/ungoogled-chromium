## Prevent request attempts
# chrome://discards/ attempts to use d3 to display the graph
--- a/chrome/browser/resources/discards/graph_doc_template.html
+++ b/chrome/browser/resources/discards/graph_doc_template.html
@@ -78,10 +78,6 @@
       }
 
     </style>
-  <script src="https://ajax.googleapis.com/ajax/libs/d3js/5.7.0/d3.min.js"
-      integrity="sha384-HL96dun1KbYEq6UT/ZlsspAODCyQ+Zp4z318ajUPBPSMzy5dvxl6ziwmnil8/Cpd"
-      crossorigin="anonymous">
-  </script>
   <script type="application/javascript">
 ${javascript_file}
   </script>
# New tab page tries to download background images
--- a/chrome/browser/search/background/ntp_background_service.cc
+++ b/chrome/browser/search/background/ntp_background_service.cc
@@ -61,6 +61,7 @@
 }
 
 void NtpBackgroundService::FetchCollectionInfo() {
+  return;
   if (collections_loader_ != nullptr)
     return;
   collection_error_info_.ClearError();
# New tab page attempts to download the 'One Google' bar
--- a/chrome/browser/search/one_google_bar/one_google_bar_loader_impl.cc
+++ b/chrome/browser/search/one_google_bar/one_google_bar_loader_impl.cc
@@ -276,6 +276,7 @@
 OneGoogleBarLoaderImpl::~OneGoogleBarLoaderImpl() = default;
 
 void OneGoogleBarLoaderImpl::Load(OneGoogleCallback callback) {
+  return;
   callbacks_.push_back(std::move(callback));
 
   // Note: If there is an ongoing request, abandon it. It's possible that
# New tab page attempts to load promos
--- a/chrome/browser/search/promos/promo_service.cc
+++ b/chrome/browser/search/promos/promo_service.cc
@@ -131,6 +131,7 @@
 PromoService::~PromoService() = default;
 
 void PromoService::Refresh() {
+  return;
   if (extensions::ShouldShowExtensionsCheckupPromo(profile_)) {
     ServeExtensionCheckupPromo();
     return;
# Attempts to check for updates even wtih autoupdate disabled
--- a/components/update_client/update_checker.cc
+++ b/components/update_client/update_checker.cc
@@ -126,6 +126,7 @@
     const base::flat_map<std::string, std::string>& additional_attributes,
     bool enabled_component_updates,
     UpdateCheckCallback update_check_callback) {
+  return;
   DCHECK(thread_checker_.CalledOnValidThread());
 
   ids_checked_ = ids_checked;
# Prevent spellcheck dictionary download
--- a/chrome/browser/spellchecker/spellcheck_hunspell_dictionary.cc
+++ b/chrome/browser/spellchecker/spellcheck_hunspell_dictionary.cc
@@ -285,6 +285,7 @@
 }
 
 void SpellcheckHunspellDictionary::DownloadDictionary(GURL url) {
+  return;
   DCHECK_CURRENTLY_ON(BrowserThread::UI);
   DCHECK(browser_context_);
 
# Prevent download of the translation ranker model used to suggest translations
--- a/components/assist_ranker/ranker_url_fetcher.cc
+++ b/components/assist_ranker/ranker_url_fetcher.cc
@@ -31,6 +31,7 @@
     const GURL& url,
     RankerURLFetcher::Callback callback,
     network::mojom::URLLoaderFactory* url_loader_factory) {
+  return false;
   // This function is not supposed to be called if the previous operation is not
   // finished.
   if (state_ == REQUESTING) {
